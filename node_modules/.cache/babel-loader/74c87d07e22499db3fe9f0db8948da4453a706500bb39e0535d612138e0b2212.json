{"ast":null,"code":"var _jsxFileName = \"/home/t1/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/kuplatform/admin-stage/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './style/index.css';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = require('./App');\nconst debug = require('debug')('node-passport-social:server');\nconst http = require('https');\nconst fs = require(\"fs\");\n\n/**\n * Get port from environment and store in Express.\n */\n\nconst port = normalizePort(process.env.PORT || '3000');\napp.set('port', port);\n\n/**\n * Create HTTPS server.\n */\n\nconst privateKey = fs.readFileSync('./key.pem');\nconst certificate = fs.readFileSync('./cert.pem');\nconst server = http.createServer({\n  key: privateKey,\n  cert: certificate\n}, app);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  var port = parseInt(val, 10);\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  const addr = server.address();\n  const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 106,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","app","require","debug","http","fs","port","normalizePort","process","env","PORT","set","privateKey","readFileSync","certificate","server","createServer","key","cert","listen","on","onError","onListening","val","parseInt","isNaN","error","syscall","bind","code","console","exit","addr","address","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/t1/Рабочий стол/kuplatform/admin-stage/src/index.js"],"sourcesContent":["import React from 'react';\n\nimport ReactDOM from 'react-dom/client';\n\nimport './style/index.css';\n\nimport App from './App';\n\nconst app = require('./App');\nconst debug = require('debug')('node-passport-social:server');\nconst http = require('https');\nconst fs = require(\"fs\");\n\n/**\n * Get port from environment and store in Express.\n */\n\nconst port = normalizePort(process.env.PORT || '3000');\napp.set('port', port);\n\n/**\n * Create HTTPS server.\n */\n\nconst privateKey = fs.readFileSync('./key.pem');\nconst certificate = fs.readFileSync('./cert.pem');\n\nconst server = http.createServer({\n  key: privateKey,\n  cert: certificate\n}, app);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n const bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  const addr = server.address();\n const bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n}\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n\n  <React.StrictMode>\n\n    <App />\n    \n\n  </React.StrictMode>\n);\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}